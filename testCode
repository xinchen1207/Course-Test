import java.util.Scanner;
//===============================================================================
public class BandOfTheHour {
//-------------------------------------------------------------------------------
    private static Scanner keyboard = new Scanner(System.in);
    private static final int MAX_ROWS = 10;
    private static final int MAX_POSITIONS = 8;
    private static final double MIN_WEIGHT = 45.0;
    private static final double MAX_WEIGHT = 200.0;
    private static final double MAX_WEIGHT_AVERAGE = 100.0;
//-------------------------------------------------------------------------------
    public static void main(String[] args) {

double[][] position;
     	char[] rowLetter;
     	int numberOfRows,numberOfPositions,index;
     	char menu;

    	System.out.println("Welcome to the Band of the Hour\n-------------------------------");
   	System.out.printf("%-42s : ","Please enter number of rows");
    	numberOfRows = keyboard.nextInt();

    	while (numberOfRows <= 0 || numberOfRows > MAX_ROWS) {
   		System.out.printf("%-42s : ","ERROR: Out of range, try again");
   		numberOfRows = keyboard.nextInt();
    	}

    	position = new double[numberOfRows][];
    	rowLetter = new char[numberOfRows];
    
    	for (index = 0; index < position.length; index++){
       
     		rowLetter[index] = (char)((int)'A' + index);

     		System.out.print("Please enter number of positions in row ");
     		System.out.print(rowLetter[index] + "  : ");
     		numberOfPositions = keyboard.nextInt();

   	 	while (numberOfPositions <= 0 || numberOfPositions > MAX_POSITIONS) {
   			System.out.printf("%-42s : ","ERROR: Out of range, try again");
   			numberOfPositions = keyboard.nextInt();
   	 	}

     		position[index] = new double[numberOfPositions];
   	}

    	System.out.println();

    	do {
     		System.out.print("(A)dd, (R)emove, (P)rint,       	e(X)it : ");
     		menu = keyboard.next().charAt(0);
     		menu = Character.toUpperCase(menu);

     		while (menu != 'A' && menu != 'R' && menu != 'P' && menu != 'X') {
        		System.out.printf("%-42s : ","ERROR: Invalid option, try again");
        		menu = keyboard.next().charAt(0);
        		menu = Character.toUpperCase(menu);
     		}

     		if (menu == 'A')
   	  		position = addMusicians(position);
    
     		if (menu == 'P')
   	  		printMusicians(position);

     		if (menu == 'R')
   	  		position = removeMusicians(position);
    	 
       
    	} while (menu != 'X');

    }

//-- addMusicians --------------------------------------------------------------------------
    private static double[][] addMusicians(double[][] position){

    	int row,spot,index;
    	double weight;
    	char letter;
    	double totalWeight = 0.0;

    	System.out.printf("%-42s : ","Please enter row letter");
    	letter = keyboard.next().charAt(0);
    	letter = Character.toUpperCase(letter);
    	while ((int)letter >= (int)'A'+ position.length) {
     		System.out.printf("%-42s : ","ERROR: Out of range, try again");
     		letter = keyboard.next().charAt(0);
     		letter = Character.toUpperCase(letter);
   	}
    	row = (int)letter - (int)'A' + 1;

    	for (index = 0; index < position[row-1].length; index++){
   	 	totalWeight += position[row-1][index];
    	}


    	System.out.print("Please enter position number (1 to " + position[row-1].length + ")  	: ");
    	spot = keyboard.nextInt();
    	while (spot > position[row-1].length || spot <= 0){
      		System.out.printf("%-42s : ","ERROR: Out of range, try again");
      		spot = keyboard.nextInt();
    	}	 

    	if ( position[row-1][spot-1] != 0.0 ){
   	 	System.out.println("ERROR: There is already a musician there.");
   	 	System.out.println();
   	 	return(position);
    	}

    	System.out.printf("%-42s : ","Please enter weight (45.0 to 200.0)");
    	weight = keyboard.nextDouble();
    	while (weight <= MIN_WEIGHT || weight >= MAX_WEIGHT){
      		System.out.printf("%-42s : ","ERROR: Out of range, try again");
      		weight = keyboard.nextDouble();
    	}	 
    
    	position[row-1][spot-1] = weight;

    	totalWeight += weight;
    	if ( totalWeight > MAX_WEIGHT_AVERAGE * position[row-1].length ){
   		System.out.println("ERROR: That would exceed the average weight limit.");
   	 	position[row-1][spot-1] = 0.0;
   	 	return(position);
    	}
    	System.out.println("****** Musician added.");
    	System.out.println();
    	return(position);

    }

//-- printMusicians ------------------------------------------------------------------------
    private static void printMusicians(double[][] position){

    	int rowIndex,spotIndex;
    	double totalWeight,averageWeight;

    	System.out.println();

    	for (rowIndex = 0; rowIndex < position.length; rowIndex++){
     		System.out.print((char)(rowIndex+(int)'A') + ":");
     		totalWeight = 0;
     		for (spotIndex = 0; spotIndex < position[rowIndex].length; spotIndex++){
     		System.out.printf("%6.1f",position[rowIndex][spotIndex]);
     		totalWeight += position[rowIndex][spotIndex];
     		}
       		for (spotIndex = spotIndex; spotIndex < MAX_POSITIONS; spotIndex++){
   		 	System.out.print("  	");
   	 	}
    	averageWeight = totalWeight / position[rowIndex].length;
    	System.out.printf("[%7.1f, %7.1f]\n",totalWeight,averageWeight);
    	}

    	System.out.println();
    }

//-- removeMusicians -----------------------------------------------------------------------
    private static double[][] removeMusicians(double[][] position){

    	int row,spot;
   	char rowLetter;

    	System.out.printf("%-42s : ","Please enter row letter");
    	rowLetter = keyboard.next().charAt(0);
    	rowLetter = Character.toUpperCase(rowLetter);
    	while ((int)rowLetter >= (int)'A'+ position.length) {
     		System.out.printf("%-42s : ","ERROR: Out of range, try again");
     		rowLetter = keyboard.next().charAt(0);
     		rowLetter = Character.toUpperCase(rowLetter);
    	}
    	row = (int)rowLetter - (int)'A' ;

    	System.out.print("Please enter position number (1 to " + position[row].length + ") 	: ");
    	spot = keyboard.nextInt();
   	while (spot > position[row].length || spot <= 0){
      		System.out.printf("%-42s : ","ERROR: Out of range, try again");
      		spot = keyboard.nextInt();
    	}	 
    
    	if ( position[row][spot-1] == 0.0) {
   	 	System.out.println("ERROR: That position is vacant.");
   	 	System.out.println();
   	 	return(position);
    	}
    	position[row][spot-1] = 0.0;
    	System.out.println("****** Musician removed.");
    	System.out.println();
    	return(position);

    }

//-------------------------------------------------------------------------------
}
//===============================================================================
